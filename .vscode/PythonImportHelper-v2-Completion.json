[
    {
        "label": "ListNode",
        "kind": 6,
        "importPath": "recursion.206_ReverseLinkedList.Solution",
        "description": "recursion.206_ReverseLinkedList.Solution",
        "peekOfCode": "class ListNode(object):\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n    def __str__(self) -> str:\n        return str(self.val)\nclass Solution(object):\n    def print(self, head):\n        print(head)\n        if head.next != None:",
        "detail": "recursion.206_ReverseLinkedList.Solution",
        "documentation": {}
    },
    {
        "label": "Solution",
        "kind": 6,
        "importPath": "recursion.206_ReverseLinkedList.Solution",
        "description": "recursion.206_ReverseLinkedList.Solution",
        "peekOfCode": "class Solution(object):\n    def print(self, head):\n        print(head)\n        if head.next != None:\n            self.print(head.next) \n    def reverseList(self, head):\n        prev = None\n        current = head\n        while current is not None:\n            next = current.next",
        "detail": "recursion.206_ReverseLinkedList.Solution",
        "documentation": {}
    },
    {
        "label": "node",
        "kind": 5,
        "importPath": "recursion.206_ReverseLinkedList.Solution",
        "description": "recursion.206_ReverseLinkedList.Solution",
        "peekOfCode": "node = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5, ListNode(6, ListNode(7, ListNode(8))))))))\nsolution = Solution() \nsolution.print(solution.reverseList(node))",
        "detail": "recursion.206_ReverseLinkedList.Solution",
        "documentation": {}
    },
    {
        "label": "solution",
        "kind": 5,
        "importPath": "recursion.206_ReverseLinkedList.Solution",
        "description": "recursion.206_ReverseLinkedList.Solution",
        "peekOfCode": "solution = Solution() \nsolution.print(solution.reverseList(node))",
        "detail": "recursion.206_ReverseLinkedList.Solution",
        "documentation": {}
    }
]